$SKIP
;;*******************************************************************************
;; EnergyDaily FBox | v1.0.0 | 08.05.2021 14:03Z
;; Copyright (C) 2020 Marina Egner <info@sheepindustries.de>
;; Author: Marina Egner
;;
;; This program is free software: you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by the
;; Free Software Foundation, either version 3 of the License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
;; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;; See the GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License along with this program.
;; If not, see <https://www.gnu.org/licenses/>.
;; *******************************************************************************
;;
;; REVISION HISTORY
;; v0.1.0  22.02.2021 - M.Egner | Initial edit;
;; v1.0.0  08.05.2021 - M.Egner | changed Adjust Parameters;
;;
;; DESCRIPTION
;; The Fbox outputs the Energy of the actual and the last Day
$ENDSKIP

  $REPORT SindFamily: EnergyDaily | FBox v1.0.0
; Check if Firmware version in DC is new enought, cause special condition codes where in use
$IF S.CPU.MinFWVersion < 12000
$FATAL SindFamily: Configured Firmware in Device Configurator is too Old! FBox needs min 1.20.00.
$ENDIF
$IFNB <name#vers> ; Not in use
$ENDIF

$IFNDEF _HEAVAC._VERS._HEAVAC
$FATAL Bitte zuerst Heavac-Init FBox platzieren!
$ENDIF
;            ###################################################################
;             ==================================== Init constants
;cWaitingTime  EQU    K 3600                      ; Time of 1/10 Hour
;             ------------------------------------
;;dNeedModify   LEQU   dyn_Flag                  ; Indicate if Modify need to be Change
;             ------------------------------------ Init dynamic Register
;dResult       LEQU   dynRegister                 ; Temp Var for Result
;             ------------------------------------ Init dynamic Flags
sDynEdge      LEQU   stcFlags                    ; Flag for rising Edge detektion
;             ------------------------------------ Init static Register
sHourMinute   LEQU   stcRegister                 ; Time Hour and Minutes HHMM
;             ------------------------------------
;            ###################################################################


;             ==================================== Init if Heavac Init is activ
              STH    _HEAVAC._RESET._EXEC        ;
              JR     L RUN                       ;
;             ------------------------------------              
INIT:
;             ==================================== Init Vars
              ACC    H                           ;
              RES    sDynEdge                    ; Reset Value
;             ------------------------------------ 
              LD     stcLastDayEnergy            ;
                     adjLastDayEnergy            ;
              LD     stcLastTotalEnergy          ;
                     adjLastTotalEnergy          ;
              JR     lEnd                        ; End Init Skip Program                     
;             ------------------------------------
RUN:
;             ------------------------------------ Calculate Day Consumtion
              SUB    inTotalEnergy               ; Subtract Total Energy
                     stcLastTotalEnergy          ; from Last total Energy
                     stcActDayEnergy             ; to get day consumtion
              SYSRD  K 7054                      ; Read actual Hour and Minute
                     sHourMinute                 ;        
              CMP    sHourMinute                 ; if Minute is
                     K 0                         ; Zero
              ACC    Z                           ; then detecting Edge
              DYN    sDynEdge                    ; store and compare last state
              JR     L lEnd                      ; if no rising edge goto end
;             ------------------------------------ else save last Energy values
              COPY   stcActDayEnergy             ; copy Day Energy
                     stcLastDayEnergy            ; to last Day Energy
              COPY   inTotalEnergy               ; copy total Energy
                     stcLastTotalEnergy          ; to last total Energy    
;             ------------------------------------                     
lEnd:
;             ------------------------------------
              COPY   stcActDayEnergy             ; copy Energy
                     outActDayEnergy             ; to output
              COPY   stcLastDayEnergy            ; copy Energy
                     outLastDayEnergy            ; to output
;             ====================================              

; ======================================================================
; -------- Externe Funktionserweiterung
; ======================================================================
;
; ---------------------------------------------------------
$IFEXIST "<$DevDir>\AddOn\AddOn\AddOn_SIND_EnergyDaily.src"
$INCLUDE "<$DevDir>\AddOn\AddOn\AddOn_SIND_EnergyDaily.src"
$ELSE
; ---------------------------------------------------------
$IFEXIST "<$ProjDir>\AddOn\AddOn\AddOn_SIND_EnergyDaily.src"
$INCLUDE "<$ProjDir>\AddOn\AddOn\AddOn_SIND_EnergyDaily.src"
$ENDIF
$ENDIF
