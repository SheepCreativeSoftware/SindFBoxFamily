$SKIP
;;*******************************************************************************
;; InSetpoint BIN FBox | v1.0.3 | 07.05.2021 19:17Z
;; Copyright (C) 2020 Marina Egner <info@sheepindustries.de>
;; Author: Marina Egner
;;
;; This program is free software: you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by the
;; Free Software Foundation, either version 3 of the License, or (at your option) any later version.
;;                                                                   
;; This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
;; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;; See the GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License along with this program.
;; If not, see <https://www.gnu.org/licenses/>.
;; *******************************************************************************
;;
;; REVISION HISTORY
;; v0.0.1  07.05.2021 - M.Egner | Initial edit;
;;
;; DESCRIPTION
;; Copy Adjust Value to the Output
$ENDSKIP

$REPORT SindFamily: InSetpoint BIN | FBox v0.1.0

$IF S.CPU.MinFWVersion < 12000
$FATAL SindFamily: Configured Firmware in Device Configurator is too Old! FBox needs min 1.20.00.
$ENDIF
$IFNB <name#vers> ; Not in use
$ENDIF
;            ###################################################################
;             ====================================
dynOutputVal  LEQU   dynRegister                 ; 
;             ------------------------------------
;            ###################################################################

;             ==================================== Init if Heavac Init is activ
              STH    _HEAVAC._RESET._EXEC        ;
              JR     L lRUN                      ;
;             ------------------------------------              
lINIT:
;             ==================================== Init Vars
              ACC    H                           ;
;             ------------------------------------ 
              LD     stcValue                    ; 
                     adjValue                    ; 
              LD     stcOutOfService             ; 
                     adjOutOfService             ; 
;             ------------------------------------
lRUN:
;             ------------------------------------
              CMP    stcOutOfService             ; If Value is
                     K 1                         ; set to 1
              JR     NE lNormal                  ; not set then Jump
              COPY   stcValue                    ; then else Copy Adjust Val
                     dynOutputVal                ; to Display Output Val
              JR     lEnd                        ; Then got to the end
;             ------------------------------------ 
lNormal:
;             ------------------------------------ 
              BITI   1                           ;
                     inValue                     ; Copy Adjust Val
                     dynOutputVal                ; to Output Val
;             ------------------------------------ 
lEnd:
;             ------------------------------------ 
              CMP    dynOutputVal                ; If Value is
                     K 1                         ; set to 1
              ACC    EQ                          ; then set
              OUT    outValue                    ; Output Val
              COPY   dynOutputVal                ; Adjust Value to
                     stcOutValue                 ; Display Output Val 
;             ==================================== 
